import React, {useRef, useState} from 'react';
import axios from "axios";
import load from "../../../assets/img/load.gif";

const CSRF = () => {
    const inputs = useRef(null)
    const [data, setData] = useState("")
    const [loading, setLoading] = useState("")
    console.log(data)

    function UrlHandlerCRSF() {
        setLoading("load")
        if (inputs.current) {

            axios.get('http://localhost:8000/pentesting/csrf/?url=' + inputs.current.value)
                .then(res => {
                    setData(res);
                    setLoading("noload")
                }).catch(err => {
                setData(err);
                setLoading("err")
            })

        }

    }

    return (
        <div className={"pentest_block"}>
            <h2 className={"subtitle"}>CSRF:</h2>
            <p className={"text"} style={{marginBottom: "10px"}}>
                (Cross-Site Request Forgery) - это тип атаки на веб-приложения, при котором злоумышленник отправляет
                запрос от имени авторизованного пользователя без его ведома или согласия. Атака основывается на том, что
                сервер не может отличить подлинный запрос от подделки, если запрос имеет правильный формат и включает
                необходимые данные.
            </p>
            <form>
                <input className={"input"} type={"search"} ref={inputs}
                       placeholder={"Введите ваш url для проверки на уязвимость к CSRF атаком"}/>
                <a className={"submit--btn"} value={">"} onClick={UrlHandlerCRSF}>></a>
            </form>
            {loading == "load" ? <div className={"load"}>
                <img src={load}/>
                <p>Это может занять несколько минут...</p>
            </div> : null}

            {loading == "err" ? <div className={"load"}>
                <p>Ошибка.....</p>
            </div> : null}

            {data.data ?
                <div>
                    <div className="code_block--pentest">
                        <code>
                            <div className={"console_title"}>{JSON.stringify(data.data.CSRF.name).toUpperCase()}:</div>
                            <div className={"console_text"}>{JSON.stringify(data.data.CSRF.result)}</div>
                        </code>
                    </div>
                </div>
                : null}

        </div>
    );
};


export default CSRF;